{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/user/workspace/javascript/react/address_message/components/Account.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from \"firebase\";\n\nclass Account extends Component {\n  constructor(props) {\n    super(props); //this.login_check();\n\n    _defineProperty(this, \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 10px\"\n    });\n\n    this.login_check = this.login_check.bind(this);\n  } // ログイン処理\n\n\n  login() {\n    let provider = new firebase.auth.GoogleAuthProvider();\n    var self = this;\n    firebase.auth().signInWithPopup(provider).then(result => {\n      this.props.dispatch({\n        type: 'UPDATE_USER',\n        value: {\n          login: true,\n          username: result.user.displayName,\n          email: result.user.email,\n          data: this.props.data,\n          items: this.props.items\n        }\n      });\n      this.props.onLogined();\n    });\n  } // ログアウト処理\n\n\n  logout() {\n    console.log(\"logout\");\n    firebase.auth().signOut();\n    this.props.dispatch({\n      type: 'UPDATE_USER',\n      value: {\n        login: false,\n        username: '(click here!)',\n        email: '',\n        data: [],\n        items: []\n      }\n    });\n    this.props.onLogouted();\n  } // login,loguoutの✓\n\n\n  login_check() {\n    if (this.props.login == false) {\n      this.login();\n    } else {\n      this.logout();\n    }\n  } // レンダリング\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"account\",\n        onClick: this.login_check,\n        children: [\"LOGINED: \", this.props.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAccount = connect(state => state)(Account);\nexport default Account;","map":{"version":3,"sources":["/Users/user/workspace/javascript/react/address_message/components/Account.js"],"names":["React","Component","connect","firebase","Account","constructor","props","fontSize","padding","login_check","bind","login","provider","auth","GoogleAuthProvider","self","signInWithPopup","then","result","dispatch","type","value","username","user","displayName","email","data","items","onLogined","logout","console","log","signOut","onLogouted","render","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAGA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAO9BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;;AAFiB,mCANX;AACNC,MAAAA,QAAQ,EAAC,MADH;AAENC,MAAAA,OAAO,EAAC;AAFF,KAMW;;AAGjB,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD,GAX6B,CAc9B;;;AACAC,EAAAA,KAAK,GAAE;AACL,QAAIC,QAAQ,GAAG,IAAIT,QAAQ,CAACU,IAAT,CAAcC,kBAAlB,EAAf;AACA,QAAIC,IAAI,GAAG,IAAX;AACAZ,IAAAA,QAAQ,CAACU,IAAT,GAAgBG,eAAhB,CAAgCJ,QAAhC,EACGK,IADH,CACSC,MAAD,IAAU;AACd,WAAKZ,KAAL,CAAWa,QAAX,CAAoB;AAClBC,QAAAA,IAAI,EAAC,aADa;AAElBC,QAAAA,KAAK,EAAC;AACJV,UAAAA,KAAK,EAAC,IADF;AAEJW,UAAAA,QAAQ,EAAEJ,MAAM,CAACK,IAAP,CAAYC,WAFlB;AAGJC,UAAAA,KAAK,EAAEP,MAAM,CAACK,IAAP,CAAYE,KAHf;AAIJC,UAAAA,IAAI,EAAC,KAAKpB,KAAL,CAAWoB,IAJZ;AAKJC,UAAAA,KAAK,EAAC,KAAKrB,KAAL,CAAWqB;AALb;AAFY,OAApB;AAUA,WAAKrB,KAAL,CAAWsB,SAAX;AACH,KAbD;AAcD,GAhC6B,CAmC9B;;;AACAC,EAAAA,MAAM,GAAE;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA5B,IAAAA,QAAQ,CAACU,IAAT,GAAgBmB,OAAhB;AACA,SAAK1B,KAAL,CAAWa,QAAX,CAAoB;AAClBC,MAAAA,IAAI,EAAC,aADa;AAElBC,MAAAA,KAAK,EAAC;AACJV,QAAAA,KAAK,EAAC,KADF;AAEJW,QAAAA,QAAQ,EAAE,eAFN;AAGJG,QAAAA,KAAK,EAAE,EAHH;AAIJC,QAAAA,IAAI,EAAC,EAJD;AAKJC,QAAAA,KAAK,EAAC;AALF;AAFY,KAApB;AAUA,SAAKrB,KAAL,CAAW2B,UAAX;AACD,GAlD6B,CAqD9B;;;AACAxB,EAAAA,WAAW,GAAE;AACX,QAAI,KAAKH,KAAL,CAAWK,KAAX,IAAoB,KAAxB,EAA8B;AAC1B,WAAKA,KAAL;AACH,KAFD,MAEO;AACL,WAAKkB,MAAL;AACD;AACF,GA5D6B,CA+D9B;;;AACAK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA,6BACE;AAAO,QAAA,SAAS,EAAC,SAAjB;AACE,QAAA,OAAO,EAAE,KAAKzB,WADhB;AAAA,gCAEY,KAAKH,KAAL,CAAWgB,QAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAzE6B;;AA6EhClB,OAAO,GAAGF,OAAO,CAAEiC,KAAD,IAAUA,KAAX,CAAP,CAAyB/B,OAAzB,CAAV;AACA,eAAeA,OAAf","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport firebase from \"firebase\";\n\n\nclass Account extends Component {\n  style = {\n    fontSize:\"12pt\",\n    padding:\"5px 10px\"\n  }\n\n\n  constructor(props) {\n    super(props);\n    //this.login_check();\n    this.login_check = this.login_check.bind(this);\n  }\n\n\n  // ログイン処理\n  login(){\n    let provider = new firebase.auth.GoogleAuthProvider();\n    var self = this;\n    firebase.auth().signInWithPopup(provider)\n      .then((result)=>{\n        this.props.dispatch({\n          type:'UPDATE_USER',\n          value:{\n            login:true,\n            username: result.user.displayName,\n            email: result.user.email,\n            data:this.props.data,\n            items:this.props.items\n          }\n        });\n        this.props.onLogined();\n    });\n  }\n\n\n  // ログアウト処理\n  logout(){\n    console.log(\"logout\");\n    firebase.auth().signOut();\n    this.props.dispatch({\n      type:'UPDATE_USER',\n      value:{\n        login:false,\n        username: '(click here!)',\n        email: '',\n        data:[],\n        items:[]\n      }\n    });\n    this.props.onLogouted();\n  }\n\n\n  // login,loguoutの✓\n  login_check(){\n    if (this.props.login == false){\n        this.login();\n    } else {\n      this.logout();\n    }\n  }\n\n\n  // レンダリング\n  render() {\n    return (\n      <p className=\"login\">\n        <span  className=\"account\"\n          onClick={this.login_check}>\n          LOGINED: {this.props.username}\n        </span>\n      </p>\n    );\n  }\n}\n\n\nAccount = connect((state)=> state)(Account);\nexport default Account;\n"]},"metadata":{},"sourceType":"module"}