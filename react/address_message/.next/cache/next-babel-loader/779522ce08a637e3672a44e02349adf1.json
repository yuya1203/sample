{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/user/workspace/javascript/react/address_message/components/Account.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from \"firebase\";\n\nclass Account extends Component {\n  constructor(props) {\n    super(props); // this.login_check();\n\n    _defineProperty(this, \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 10px\"\n    });\n\n    this.login_check = this.login_check.bind(this);\n  } // ログイン処理\n\n\n  login() {\n    let provider = new firebase.auth.GoogleAuthProvider();\n    var self = this;\n    firebase.auth().signInWithPopup(provider).then(result => {\n      this.props.dispatch({\n        type: 'UPDATE_USER',\n        value: {\n          login: true,\n          username: result.user.displayName,\n          email: result.user.email,\n          data: this.props.data,\n          items: this.props.items\n        }\n      });\n      this.props.onLogined();\n    });\n  } // ログアウト処理\n\n\n  logout() {\n    console.log(\"logout\");\n    firebase.auth().signOut();\n    this.props.dispatch({\n      type: 'UPDATE_USER',\n      value: {\n        lopin: false,\n        username: '(click here!)',\n        email: '',\n        data: [],\n        items: []\n      }\n    });\n    this.props.onLogouted();\n  } // login, logoutのチェック\n\n\n  login_check() {\n    if (this.props.login == false) {\n      this.login();\n    } else {\n      this.logout();\n    }\n  } // レンダリング\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"account\",\n        onClick: this.login_check,\n        children: [\"LOGINED: \", this.props.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nAccount = connect(state => state)(Account);\nexport default Account;","map":{"version":3,"sources":["/Users/user/workspace/javascript/react/address_message/components/Account.js"],"names":["React","Component","connect","firebase","Account","constructor","props","fontSize","padding","login_check","bind","login","provider","auth","GoogleAuthProvider","self","signInWithPopup","then","result","dispatch","type","value","username","user","displayName","email","data","items","onLogined","logout","console","log","signOut","lopin","onLogouted","render","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAM/BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN,EADkB,CAElB;;AAFkB,mCALX;AACPC,MAAAA,QAAQ,EAAE,MADH;AAEPC,MAAAA,OAAO,EAAC;AAFD,KAKW;;AAGlB,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,GAV8B,CAY/B;;;AACAC,EAAAA,KAAK,GAAG;AACP,QAAIC,QAAQ,GAAG,IAAIT,QAAQ,CAACU,IAAT,CAAcC,kBAAlB,EAAf;AACA,QAAIC,IAAI,GAAG,IAAX;AACAZ,IAAAA,QAAQ,CAACU,IAAT,GAAgBG,eAAhB,CAAgCJ,QAAhC,EACEK,IADF,CACQC,MAAD,IAAY;AACjB,WAAKZ,KAAL,CAAWa,QAAX,CAAoB;AACnBC,QAAAA,IAAI,EAAE,aADa;AAEnBC,QAAAA,KAAK,EAAE;AACNV,UAAAA,KAAK,EAAE,IADD;AAENW,UAAAA,QAAQ,EAAEJ,MAAM,CAACK,IAAP,CAAYC,WAFhB;AAGNC,UAAAA,KAAK,EAAEP,MAAM,CAACK,IAAP,CAAYE,KAHb;AAINC,UAAAA,IAAI,EAAE,KAAKpB,KAAL,CAAWoB,IAJX;AAKNC,UAAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWqB;AALZ;AAFY,OAApB;AAUA,WAAKrB,KAAL,CAAWsB,SAAX;AACA,KAbF;AAcA,GA9B8B,CAgC/B;;;AACAC,EAAAA,MAAM,GAAG;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA5B,IAAAA,QAAQ,CAACU,IAAT,GAAgBmB,OAAhB;AACA,SAAK1B,KAAL,CAAWa,QAAX,CAAoB;AACnBC,MAAAA,IAAI,EAAE,aADa;AAEnBC,MAAAA,KAAK,EAAE;AACNY,QAAAA,KAAK,EAAE,KADD;AAENX,QAAAA,QAAQ,EAAE,eAFJ;AAGNG,QAAAA,KAAK,EAAE,EAHD;AAINC,QAAAA,IAAI,EAAE,EAJA;AAKNC,QAAAA,KAAK,EAAE;AALD;AAFY,KAApB;AAUA,SAAKrB,KAAL,CAAW4B,UAAX;AACA,GA/C8B,CAiD/B;;;AACAzB,EAAAA,WAAW,GAAG;AACb,QAAI,KAAKH,KAAL,CAAWK,KAAX,IAAoB,KAAxB,EAA+B;AAC9B,WAAKA,KAAL;AACA,KAFD,MAEO;AACN,WAAKkB,MAAL;AACA;AACD,GAxD8B,CA0D/B;;;AACAM,EAAAA,MAAM,GAAG;AACR,wBACC;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA,6BACC;AAAM,QAAA,SAAS,EAAC,SAAhB;AACC,QAAA,OAAO,EAAE,KAAK1B,WADf;AAAA,gCAEW,KAAKH,KAAL,CAAWgB,QAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAQA;;AApE8B;;AAuEhClB,OAAO,GAAGF,OAAO,CAAEkC,KAAD,IAAWA,KAAZ,CAAP,CAA0BhC,OAA1B,CAAV;AACA,eAAeA,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from \"firebase\";\n\nclass Account extends Component {\n\tstyle = {\n\t\tfontSize: \"12pt\",\n\t\tpadding:\"5px 10px\"\n\t}\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// this.login_check();\n\t\tthis.login_check = this.login_check.bind(this);\n\t}\n\n\t// ログイン処理\n\tlogin() {\n\t\tlet provider = new firebase.auth.GoogleAuthProvider();\n\t\tvar self = this;\n\t\tfirebase.auth().signInWithPopup(provider)\n\t\t\t.then((result) => {\n\t\t\t\tthis.props.dispatch({\n\t\t\t\t\ttype: 'UPDATE_USER',\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\tlogin: true,\n\t\t\t\t\t\tusername: result.user.displayName,\n\t\t\t\t\t\temail: result.user.email,\n\t\t\t\t\t\tdata: this.props.data,\n\t\t\t\t\t\titems: this.props.items\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.props.onLogined();\n\t\t\t});\n\t}\n\n\t// ログアウト処理\n\tlogout() {\n\t\tconsole.log(\"logout\");\n\t\tfirebase.auth().signOut();\n\t\tthis.props.dispatch({\n\t\t\ttype: 'UPDATE_USER',\n\t\t\tvalue: {\n\t\t\t\tlopin: false,\n\t\t\t\tusername: '(click here!)',\n\t\t\t\temail: '',\n\t\t\t\tdata: [],\n\t\t\t\titems: []\n\t\t\t}\n\t\t});\n\t\tthis.props.onLogouted();\n\t}\n\n\t// login, logoutのチェック\n\tlogin_check() {\n\t\tif (this.props.login == false) {\n\t\t\tthis.login();\n\t\t} else {\n\t\t\tthis.logout();\n\t\t}\n\t}\n\n\t// レンダリング\n\trender() {\n\t\treturn (\n\t\t\t<p className=\"login\">\n\t\t\t\t<span className=\"account\"\n\t\t\t\t\tonClick={this.login_check}>\n\t\t\t\t\tLOGINED: {this.props.username}\n\t\t\t\t</span>\n\t\t\t</p>\n\t\t);\n\t}\n}\n\nAccount = connect((state) => state)(Account);\nexport default Account;\n"]},"metadata":{},"sourceType":"module"}