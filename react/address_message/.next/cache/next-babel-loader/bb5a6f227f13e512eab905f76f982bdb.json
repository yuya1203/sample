{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/user/workspace/javascript/react/address_message/components/Address.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\n\nvar Address = /*#__PURE__*/function (_Component) {\n  _inherits(Address, _Component);\n\n  var _super = _createSuper(Address);\n\n  function Address(props) {\n    var _this;\n\n    _classCallCheck(this, Address);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 10px\"\n    });\n\n    _this.logined = _this.logined.bind(_assertThisInitialized(_this));\n    return _this;\n  } // login,logout処理\n\n\n  _createClass(Address, [{\n    key: \"logined\",\n    value: function logined() {\n      this.getFireData();\n    }\n  }, {\n    key: \"logouted\",\n    value: function logouted() {\n      Router.push('/address');\n    } // Firebaseからデータを取得\n\n  }, {\n    key: \"getFireData\",\n    value: function getFireData() {\n      var _this2 = this;\n\n      if (this.props.email == undefined || this.props.email == '') {\n        return;\n      }\n\n      var email = Lib.encodeEmail(this.props.email);\n      var db = firebase.database();\n      var ref = db.ref('address/');\n      var self = this;\n      ref.orderByKey().equalTo(email).on('value', function (snapshot) {\n        var d = Lib.deepcopy(snapshot.val());\n\n        _this2.props.dispatch({\n          type: 'UPDATE_USER',\n          value: {\n            login: _this2.props.login,\n            username: _this2.props.username,\n            email: _this2.props.email,\n            data: d,\n            items: self.getItem(d)\n          }\n        });\n      });\n    } // dataを元に表示項目を作成\n\n  }, {\n    key: \"getItem\",\n    value: function getItem(data) {\n      if (data == undefined) {\n        return;\n      }\n\n      var res = [];\n\n      for (var i in data) {\n        for (var j in data[i]) {\n          var email = Lib.decodeEmail(j);\n          var s = data[i][j]['name'];\n          res.push( /*#__PURE__*/_jsxDEV(\"li\", {\n            \"data-tag\": email,\n            onClick: this.go.bind(null, email),\n            children: [data[i][j]['check'] == true ? /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"\\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 13\n            }, this) : '', s, \" (\", email, \")\"]\n          }, j, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 18\n          }, this));\n        }\n\n        break;\n      }\n\n      return res;\n    } // データ表示ページの移動\n\n  }, {\n    key: \"go\",\n    value: function go(email) {\n      Router.push('/address_show?email=' + email);\n    } // レンダリング\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Account, {\n          onLogined: this.logined,\n          onLogouted: this.logouted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.props.items == [] ? /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"no item.\"\n          }, \"0\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this) : this.props.items\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Address;\n}(Component);\n\nAddress = connect(function (state) {\n  return state;\n})(Address);\nexport default Address;","map":{"version":3,"sources":["/Users/user/workspace/javascript/react/address_message/components/Address.js"],"names":["React","Component","connect","Router","firebase","Lib","Account","Address","props","fontSize","padding","logined","bind","getFireData","push","email","undefined","encodeEmail","db","database","ref","self","orderByKey","equalTo","on","snapshot","d","deepcopy","val","dispatch","type","value","login","username","data","items","getItem","res","i","j","decodeEmail","s","go","logouted","state"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\n\n\nclass Address extends Component {\n  style = {\n    fontSize:\"12pt\",\n    padding:\"5px 10px\"\n  }\n\n\n  constructor(props) {\n    super(props);\n    this.logined = this.logined.bind(this);\n  }\n\n\n  // login,logout処理\n  logined(){\n    this.getFireData();\n  }\n  logouted(){\n    Router.push('/address');\n  }\n\n\n  // Firebaseからデータを取得\n  getFireData(){\n    if (this.props.email == undefined ||\n      this.props.email == ''){ return; }\n    let email = Lib.encodeEmail(this.props.email);\n    let db = firebase.database();\n    let ref = db.ref('address/');\n    let self = this;\n    ref.orderByKey()\n      .equalTo(email)\n      .on('value', (snapshot)=>{\n        let d = Lib.deepcopy(snapshot.val());\n        this.props.dispatch({\n          type:'UPDATE_USER',\n          value:{\n            login:this.props.login,\n            username: this.props.username,\n            email: this.props.email,\n            data:d,\n            items:self.getItem(d)\n          }\n        });\n    });\n  }\n\n\n  // dataを元に表示項目を作成\n  getItem(data){\n    if (data == undefined){ return; }\n    let res = [];\n    for (let i in data){\n      for(let j in data[i]){\n        let email = Lib.decodeEmail(j);\n        let s = data[i][j]['name'];\n\n\n        res.push(<li key={j} data-tag={email}\n          onClick={this.go.bind(null, email)}>\n          {data[i][j]['check'] == true ?\n            <b>✓</b> : ''}{s} ({email})\n        </li>);\n      }\n      break;\n    }\n    return res;\n  }\n\n\n  // データ表示ページの移動\n  go(email){\n    Router.push('/address_show?email=' + email);\n  }\n\n\n  // レンダリング\n  render(){\n    return (\n      <div>\n        <Account onLogined={this.logined}\n          onLogouted={this.logouted} />\n        <ul>\n          {this.props.items == []\n          ?\n          <li key=\"0\">no item.</li>\n          :\n          this.props.items\n          }\n        </ul>\n      </div>\n    )\n  }\n}\n\n\nAddress = connect((state)=> state)(Address);\nexport default Address;\n"]},"metadata":{},"sourceType":"module"}