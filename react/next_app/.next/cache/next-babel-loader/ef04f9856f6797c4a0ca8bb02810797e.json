{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/user/workspace/javascript/react/next_app/components/Counter.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nvar Counter = /*#__PURE__*/function (_Component) {\n  _inherits(Counter, _Component);\n\n  var _super = _createSuper(Counter);\n\n  function Counter(props) {\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 15px\"\n    });\n\n    _this.doAction = _this.doAction.bind(_assertThisInitialized(_this));\n    _this.reset = _this.reset.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"doAction\",\n    value: function doAction(e) {\n      if (e.shiftKey) {\n        return this.props.dispatch({\n          type: 'DECREMENT'\n        });\n      } else {\n        return this.props.dispatch({\n          type: 'INCREMENT'\n        });\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      return this.props.dispatch({\n        type: 'RESET'\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [this.props.message, \": \", this.props.count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: this.style,\n          onClick: this.doAction,\n          Count: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: this.style,\n          onClick: this.reset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 4\n      }, this);\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nCounter = connect(function (state) {\n  return state;\n})(Counter);\nexport default Counter; // import React, { Component } from 'react';\n// export default class Counter extends Component {\n// \tmsgStyle = {\n// \t\tfontSize: \"16pt\",\n// \t\tbackgroundColor: \"#eef\",\n// \t\tpadding:\"5px\"\n// \t}\n// \tconstructor(props) {\n// \t\tsuper(props);\n// \t\tthis.state = {\n// \t\t\tcounter: 0,\n// \t\t\tmsg: 'counter:0',\n// \t\t\tmsg: 'counter: 0',\n// \t\t};\n// \t\tthis.doAction = this.doAction.bind(this);\n// \t}\n// \tdoAction() {\n// \t\tthis.setState((state) => {\n// \t\t\tconst num = state.counter + 1;\n// \t\t\treturn ({\n// \t\t\t\tcounter: num,\n// \t\t\t\tmsg: \"counter: \" + num\n// \t\t\t});\n// \t\t});\n// \t}\n// \trender() {\n// \t\treturn <p onClick={this.doAction}\n// \t\t\tstyle={this.msgStyle}>\n// \t\t\t{this.state.msg}\n// \t\t</p>;\n// \t}\n// }","map":{"version":3,"sources":["/Users/user/workspace/javascript/react/next_app/components/Counter.js"],"names":["React","Component","connect","Counter","props","fontSize","padding","doAction","bind","reset","e","shiftKey","dispatch","type","message","count","style","state"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,O;;;;;AAML,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;;AADkB,4DALX;AACPC,MAAAA,QAAQ,EAAE,MADH;AAEPC,MAAAA,OAAO,EAAC;AAFD,KAKW;;AAElB,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB;AACA,UAAKC,KAAL,GAAa,MAAKA,KAAL,CAAWD,IAAX,+BAAb;AAHkB;AAIlB;;;;6BAEQE,C,EAAG;AACX,UAAIA,CAAC,CAACC,QAAN,EAAgB;AACf,eAAO,KAAKP,KAAL,CAAWQ,QAAX,CAAoB;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAApB,CAAP;AACA,OAFD,MAEO;AACN,eAAO,KAAKT,KAAL,CAAWQ,QAAX,CAAoB;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAApB,CAAP;AACA;AACD;;;4BAEO;AACP,aAAO,KAAKT,KAAL,CAAWQ,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAApB,CAAP;AACA;;;6BAEQ;AACR,0BACC;AAAA,gCACC;AAAA,qBAAI,KAAKT,KAAL,CAAWU,OAAf,QAA0B,KAAKV,KAAL,CAAWW,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAQ,UAAA,KAAK,EAAE,KAAKC,KAApB;AAA2B,UAAA,OAAO,EAAE,KAAKT,QAAzC;AACC,UAAA,KAAK;AADN;AAAA;AAAA;AAAA;AAAA,gBAFD,eAIC;AAAQ,UAAA,KAAK,EAAE,KAAKS,KAApB;AAA2B,UAAA,OAAO,EAAE,KAAKP,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AASA;;;;EAlCoBR,S;;AAoCtBE,OAAO,GAAGD,OAAO,CAAC,UAACe,KAAD;AAAA,SAAWA,KAAX;AAAA,CAAD,CAAP,CAA0Bd,OAA1B,CAAV;AACA,eAAeA,OAAf,C,CAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Counter extends Component {\n\tstyle = {\n\t\tfontSize: \"12pt\",\n\t\tpadding:\"5px 15px\"\n\t}\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.doAction = this.doAction.bind(this);\n\t\tthis.reset = this.reset.bind(this);\n\t}\n\n\tdoAction(e) {\n\t\tif (e.shiftKey) {\n\t\t\treturn this.props.dispatch({ type: 'DECREMENT' });\n\t\t} else {\n\t\t\treturn this.props.dispatch({ type: 'INCREMENT' });\n\t\t}\n\t}\n\n\treset() {\n\t\treturn this.props.dispatch({ type: 'RESET' });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>{this.props.message}: {this.props.count}</p>\n\t\t\t\t<button style={this.style} onClick={this.doAction}\n\t\t\t\t\tCount></button>\n\t\t\t\t<button style={this.style} onClick={this.reset}>\n\t\t\t\t\tReset</button>\n\t\t\t</div>\n\t\t)\n\t}\n}\nCounter = connect((state) => state)(Counter);\nexport default Counter;\n\n\n\n// import React, { Component } from 'react';\n\n// export default class Counter extends Component {\n// \tmsgStyle = {\n// \t\tfontSize: \"16pt\",\n// \t\tbackgroundColor: \"#eef\",\n// \t\tpadding:\"5px\"\n// \t}\n\n// \tconstructor(props) {\n// \t\tsuper(props);\n// \t\tthis.state = {\n// \t\t\tcounter: 0,\n// \t\t\tmsg: 'counter:0',\n// \t\t\tmsg: 'counter: 0',\n// \t\t};\n// \t\tthis.doAction = this.doAction.bind(this);\n// \t}\n\n// \tdoAction() {\n// \t\tthis.setState((state) => {\n// \t\t\tconst num = state.counter + 1;\n// \t\t\treturn ({\n// \t\t\t\tcounter: num,\n// \t\t\t\tmsg: \"counter: \" + num\n// \t\t\t});\n// \t\t});\n// \t}\n\n// \trender() {\n// \t\treturn <p onClick={this.doAction}\n// \t\t\tstyle={this.msgStyle}>\n// \t\t\t{this.state.msg}\n// \t\t</p>;\n// \t}\n// }\n"]},"metadata":{},"sourceType":"module"}